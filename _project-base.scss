@import "dependencies";
@import "project-variables";

//todo: fix this
@import "objects/objects";
@import "modules/core/module";
@import "modules/colors/module";


//@import "../g-Patternlab/modules/typography/module";
@import "modules/rhythm-spacing/module";
//@import "../g-Patternlab/modules/components/module";
//@import "../g-Patternlab/modules/generator/module";

@import "modules/unit-test/module";

$generate-map: (
    scheme-classes: false,
    swatch-classes: false,
    type-classes:false,
    rhythm-spacing:false,
    utility-static:false,
    components:false

);
@include init-color-module;




$functional-render-queue:((
    description: "INVERT FUNCTIONAL COLOR ",
    variant-key: invert-functional,
    selector:false,
    parent: color-test,
    render:(suffix:false)
),
(
    description: "FONT SIZING  ",
    variant-key: sm,
    selector:false,
    parent: font-size,
    render:(suffix:false)
)
);

$test: batch-add-to-style-dictionary($base-render-objects);

//@debug extend-style-key( color-test-2,$functional-render-queue);
//@debug get-rendered-data(transform-data(get-single-render-style-props(color-test, variants)...),);

///@debug " transform #{get-rendered-data(transform-data(get-single-render-style-props(color-test, variants)...),get-single-render-style-props(color-test, render)...)}";

//EXAMPLES:::::
.example1 {
    //use key "color-test" and render multiple variants within parent selector
  //  @include render-queue(font-size,sm);
    @include render-queue(extend-style-key( color-test-2,$functional-render-queue));
}


