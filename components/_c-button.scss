
@mixin c-button( $color-scheme: $chroma-active-scheme,$units:1,$width:auto ) {

    //this is basically a wrapper for a kabob.

    $self: &;
    //width: 100%;
    cursor: pointer;
    transition: all 0.3s ease;

    $props: (
        background: true,
        foreground: true,
        border: true
    );
    @include g-color-scheme($color-scheme,$props...);

    @extend %u-reset-link-color;

   // @include setType(2,font-san-serif);
    font-size: ms(0);
    line-height: 0;
    text-align: center;

    &.--no-background, &.--no-background:hover {
        background-color: transparent;
    }



    //todo: if scheme has special hover
    &:hover {
        background-color: lighten(color($color-scheme, background), 10%);
        transform: translateY(-5px);
        box-shadow: 0 20px 20px -15px rgba(0, 0, 0, 0.3);
    }

    &.--no-border {
        border: none;
    }

    padding: rhythm(.2) rhythm(.2);

    &.--no-padding{
        padding: 0;
    }
    //the default is square button
    border-radius: 0;
    &.--rounded {
        padding: rhythm(1);
        border-radius: rhythm(1);
    }

    &.--circle {
        padding: #{rhythm(1) / 6};
        border-radius: 100%;
        line-height: 0;
        height: 100%;
    }

    &__icon{

        @debug "colorschee :  #{$color-scheme} foregrounf: #{color($color-scheme,foreground)}";
        @include u-icon-svg(color($color-scheme,foreground), ms(get-scale-units()));
    }

    @each $key, $unit in $scale-units {
        // @debug 'kabob scale-sizes-#{$key} units #{ms($unit)}';

        &.--#{$key} &__icon{
            @include o-icon-svg(color($color-scheme, foreground), $key);
        }
    }

}