$component-name: 'Gallery';
$child-component-name: 'Gallery-Card';
@mixin c-gallery($color-scheme: $chroma-active-scheme ) {


    width: auto;
    //this is for type primarily.


  //  @include color-scheme($color-scheme, true, false);
    &__caption{

        @include setType(-1, font-san-serif);

    }

&__image{



}
    &__item {


        transition: all 0.2s;
        cursor: hand;
       @include color-scheme($color-scheme, true, false);
        @include container-padding;

        width: auto;
        border: 2px solid red;

        &:hover {
            background: lighten(color($color-scheme, background), 8%);
        }



    }



    &__link, a {
        text-decoration: none;
    }
    svg * {
        fill: color($color-scheme, foreground);
    }

    &__left {

        .-includeIcon.-iconRight & {
            margin-left: rhythm(1);
        }
        .-includeIcon.-iconLeft & {
            margin-right: rhythm(1);
        }
    }

    &__inner {

        .-includeIcon & {
            display: flex;
            flex-direction: row;
            align-items: center;
            width: auto;
        }
        .-includeIcon.-iconRight & {

            flex-direction: row-reverse;
            justify-content: flex-end;
        }
    }
    &__icon {
        width: 20px;
    }


    &.-includeIcon {

        &__inner {

        }
    }
    @content;
}

///CSS to generate.

///MAIN BLOCK CSS
@include block($component-name, component) {
    @include dry(grid-2) ;
@debug "DOING IT";
}


 /*  @include c-gallery(){

       .-has-frame    &{

           background: green;
       }
   };

    @if ($generate-components) {
        @each $key, $name in $THEME_RENDER_KEYS {

            @include modifier($key) {
              //  @include c-gallery($key);
            }
        }
    }

    @include modifier(frame) {
  @include c-gallery(light);
        background: orange;
    }*/


