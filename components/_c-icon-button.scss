
@mixin c-icon-button( $color-scheme: $chroma-active-scheme,$schemeProps:false,$units:2,$width:auto,$font:font-san-serif ) {

    //this is basically a wrapper for a kabob.

    $self: &;
    width: $width;

    @include dry(c-button, $DRY_ENABLED){
        display: flex;
        align-items: center;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    @if ($schemeProps and type-of($schemeProps) == map){
        @include g-color-scheme($color-scheme,$schemeProps...);
    }@else{
        $props: (
            background: true,
            foreground: true,
            border: false,
            fill:foreground,
            hover-foreground:rgba( color($color-scheme,foreground), .8 ),
            hover-fill: adjust-hue(color($color-scheme,accent),-10%),

        );
        @include g-color-scheme($color-scheme,$props...);
    }

    &.--hover-invert{
        $props: (
            background: true,
            foreground: true,
            border: true,
            fill:foreground,
            hover-background: invert,
            hover-foreground:invert
        );
        @include g-color-scheme($color-scheme,$props...);

    }


    &.--accent{
        $props: (
            background: true,
            foreground: true,
            border: true,
            fill:accent,
            hover-background:true ,
            hover-foreground:true
        );
        @include g-color-scheme($color-scheme,$props...);
    }

    @extend %u-reset-link-color;


    &__center{
        //@include setType($units,$font,0);
       // @include adjust-font-size-to(ms($units),1);

    }

    &.--italic {
        &__center{
           // @include setType($units,font-serif-italic,1);
            // @include adjust-font-size-to(ms($units),1);
        }
    }

    text-align: center;

    &.--no-background, &.--no-background:hover {
        background-color: transparent;
    }

    &.--no-border {
        border: none;
    }
    padding: rhythm(1) rhythm(1);

    &.--sm-padding{
        padding: rhythm(.25) rhythm(1);

    }


    &.--no-padding{
        padding: 0;
    }
    //the default is square button
    border-radius: 0;
    &.--rounded {
        padding: rhythm(1);
        border-radius: rhythm(1);
    }

    &.--circle {
        padding: #{rhythm(1) / 6};
        border-radius: 100%;
        line-height: 0;
        height: 100%;
    }

    &__icon, &__left, &__right{

       // @debug "colorschee :  #{$color-scheme} foregrounf: #{color($color-scheme,foreground)}";
       @include o-icon-svg(false, $units );
    }

    @each $key, $unit in $scale-units {
        // @debug 'kabob scale-sizes-#{$key} units #{ms($unit)}';

        &.--#{$key} &__icon,&.--#{$key} &__left, &.--#{$key} &__right {
           // @include o-icon-svg(false, $unit - 2 );
        }
    }
    @each $key, $unit in $scale-units {

        &.--#{$key} &__center{
         // @include setType( $unit,$font,1)
        }
        &.--italic#{&}.--#{$key} &__center{
           // @include setType( $unit,font-serif-italic,1)
        }
    }


    &__left + &__center{
        //padding-left: rhythm(.5);
    }
    &__center + &__right{
        //padding-left: rhythm(.5);
    }
}