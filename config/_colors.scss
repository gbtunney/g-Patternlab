///******SETUP CHROMA-SASS

///get variable from config flie
@include setting-set-multiple($baseColors);

// Define the default color scheme.
$chroma: define-default-color-scheme('Branding color names for use by "functional" color names below.');
// Add colors to the default color scheme.
$chroma: add-colors($baseColors);

///IMPORT COLORS FROM CONFIG FILE
@for $i from 1 through length($schemes) {

    $scheme: nth($schemes, $i);

    @if (map-get($scheme,'parent') ==false) {
        $chroma: define-color-scheme(map-get($scheme, key));
    } @else {
        $chroma: define-color-scheme(map-get($scheme, key), $parent: map-get($scheme, parent));
        @if (map-has-key($scheme, colors) ==false) {
            @if (map-has-key($scheme, invert)) {
                $scheme: map-merge($scheme, (colors: u-inverted-colormap(map-get($scheme, key))));
            }
        }
    }

    // Add colors to the functional color scheme.
    @if (map-has_key($scheme, colors)) {
        $chroma: add-colors(map-get($scheme, key), map-get($scheme, colors));
    }
}

//set the active scheme for chroma.
$chroma-active-scheme: $active-scheme;