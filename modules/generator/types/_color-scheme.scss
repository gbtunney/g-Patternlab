
//*****GENERATES SCHEME (with flags for accent and borders.)

/*
Generator for Scheme Utility Classes
:hover             - Subtle hover highlight.
.--accent           - uses scheme accent added to h1,h2,h3,h4,h5,a.
.--border           - uses scheme border and adds a 1 px border.
.--icon             - uses scheme foreground to fill inline svg
.--icon.--accent    - uses scheme accent to fill inline svg

Styleguide 2.1.3.
*/

@mixin g-generate-scheme-utility-classes() {

    //todo: only render list?
    @for $i from 1 through length($schemes) {
        $scheme: nth($schemes, $i);
        $key: map-get($scheme, key);

        @include utility(get-utility-prefix(scheme, $key)) {

            $props: (background: true, foreground: true, border: true, fill:foreground);
            @include g-color-scheme($key, $props...);

            &.--accent {
                @include g-color-scheme($key, false, false, true, false);
            }
            &.--no-border {
                border: none;
            }
            &.--icon {

                $props: (background: false, foreground: false, border: false, fill:true);
                @include g-color-scheme($key, $props...);

                &.--accent {
                    $props: (background: false, foreground: false, border: false, fill:accent);
                    @include g-color-scheme($key, $props...);
                }
            }
        }
    }
}

@mixin static-utilities-scheme(){

    $prefix: #{map-get($bem-block-namespaces,utility)}#{$utility-seperator};
    //********* RESET *********//
    .#{$prefix}reset-link-color {
        @extend %u-reset-link-color;
    }
    .#{$prefix}reset-link-font {
        a, a:hover {
            @include resetType;
        }
    }
    .#{$prefix}reset-children-color {
        @extend %u-reset-children-color;
    }
    .#{$prefix}reset-header-color {
        @extend %u-reset-header;
    }
}