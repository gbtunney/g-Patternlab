$default-accent-selector: 'h1, h2, h3, h4, h5, h6,a ';

//TODO:rename this
@mixin g-color-scheme-accent( $color, $accent-selector: $default-accent-selector ) {
    @if ($accent-selector) {
        #{$accent-selector} {
            color: $color;
        }
    } @else {
        #{$default-accent-selector} {
            color: $color;
        }
    }
}

@mixin g-color-scheme($color-scheme:$chroma-active-scheme, $background:true, $foreground:true,$accent:false, $border:false, $accent-selector:false, $border-size: 1px ) {

    //overriding a scheme
    @if ($color-scheme == false) {
        @if ($foreground and type-of($foreground) == color) {
            color: $foreground;
        } @else {
            @debug '*****ALERT! FOREGROUND #{$foreground} IS NOT A COLOR!';
        }
        @if ($background and type-of($background) == color) {
            background-color: $background;
        } @else {
            @debug '*****ALERT! BACKGROUND #{$background} IS NOT A COLOR!';
        }
        @if ($border) {
            border: $border-size solid $border;
        }
        @if ($accent) {
            @if ($accent-selector) {
                @debug "there is an accent selector";
                #{$accent-selector} {
                    color: $accent;
                }
            } @else {
                #{$default-accent-selector} {
                    color: $accent;
                }
            }
        }
        //using a scheme
    } @else if (type-of($color-scheme) == string and chroma-has-scheme($color-scheme)) {

        //**BACKGROUND
        @if ($background == true) {
            @if (chroma-has-color(background, $color-scheme)) {
                background-color: color($color-scheme, background);
            } @else {
                @debug "*****ALERT ! SCHEME #{$color-scheme} does not have a value for background.";
            }
        } @else if (type-of($background ) == color) {
            background-color: $background;
            @debug 'overriding the background';
        }

        //**FOREGROUND
        @if ($foreground == true) {
            @if (chroma-has-color(foreground, $color-scheme)) {
                color: color($color-scheme, foreground);
            } @else {
                @debug "*****ALERT ! SCHEME #{$color-scheme} does not have a value for foreground ";
            }
        } @else if (type-of($background ) == color) {
            color: $foreground;
            @debug 'overriding the foreground';
        }

        //**BORDER
        @if ($border == true) {
            @if (chroma-has-color(border, $color-scheme)) {
                border: $border-size solid color($color-scheme, border);
            } @else {
                @debug "*****ALERT ! SCHEME #{$color-scheme} does not have a value for border - using foreground instead.";
                border: $border-size solid color($color-scheme, foreground);
            }
        } @else if (type-of($border ) == color) {
            border: $border-size solid border;
            @debug 'overriding the border color';
        }
        ///***ACCENT
        @if ($accent == true) {
            @if (chroma-has-color(accent, $color-scheme)) {
                @include g-color-scheme-accent(color($color-scheme, accent), $accent-selector);
            } @else {
                @debug "*****ALERT ! SCHEME #{$color-scheme} does not have a value for accnet - using complement instead.";
                @include g-color-scheme-accent(complement(color($color-scheme, foreground)), $accent-selector);
            }
        } @else if (type-of($accent ) == color) {
            @include g-color-scheme-accent($accent, $accent-selector);
        }

    } @else {
        @debug "***ERROR , SCHEME #{$color-scheme}  NOT FOUND. ";
    }
}

@mixin color-scheme($color-scheme: $chroma-active-scheme,$border: true, $accent:false, $background:true, $background-color-only:false ) {
    $self: &;
    //@debug $self;

    @if ($color-scheme != false) {
        color: color($color-scheme, foreground);

        @if ($background) {
            @if ($background-color-only) {
                background-color: color($color-scheme, background);

            } @else {
                background: color($color-scheme, background);
            }
        }

        @if ($border) {
            border: 1px solid color($color-scheme, border);
            border-radius: 0px;
        }
        @if ($accent) {

            h1, h2, h3, h4, h5, h6 {
                color: color($color-scheme, accent);
            }
            a {
                color: color($color-scheme, link);
                &:hover { //get rid of underlines
                    color: lighten(color($color-scheme, link), 10%);
                    text-decoration: none;
                }
            }
        } @else {
            h1, h2, h3, h4, h5, h6 {
                color: color($color-scheme, foreground);
            }
            a {
                color: color($color-scheme, foreground);
                &:hover { //get rid of underlines
                    color: lighten(color($color-scheme, foreground), 10%);
                    text-decoration: none;
                }
            }
        }
    }
    @content;
}

@mixin invert-scheme( $base-scheme, $new-scheme-name:null,$accent:null ) {

    @if ($new-scheme-name == null) {
        $new-scheme-name: #{$base-scheme}-invert;
    }
    @if ($accent == null) {

        $accent: color($base-scheme, accent);
    }

    $chroma: define-color-scheme($new-scheme-name);
    $chroma: add-colors($new-scheme-name, (
        foreground: color($base-scheme, background),
        background: color($base-scheme, foreground),
        accent: $accent,
        border: color($base-scheme, foreground),
    ));
}

@mixin u-background-with-contrast-text( $color: color(background)) {
    background: $color;
    color: get-contrast-color($color);
}