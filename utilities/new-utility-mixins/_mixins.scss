// A button suitable for giving a star to someone.
//
// :hover             - Subtle hover highlight.
// .star-given        - A highlight indicating you've already given a star.
// .star-given:hover  - Subtle hover highlight on top of star-given styling.
// .disabled          - Dims the button to indicate it cannot be used.
//
// Styleguide 2.1.3.


//@include absolute-center([$vertical, $horizontal, $fixed, $extend])
/*
Settings

'absolute center fixed': false (fixed position item)
'absolute center extend': false
'absolute center vertical midpoint': 50%
'absolute center fixed horizontal': 0%
'absolute center fixed horizontal midpoint': 50% (horizontal midpoint for fixed position item)
*/

////*******************
///LAYOUT - STICK AND FLOAT
////*******************
@mixin box-shadow($x-axis: 0, $y-axis: 1px, $blur: 2px, $color: $default) {
    box-shadow: $x-axis $y-axis $blur $color;
}

@mixin u-stick-to( $sides:bottom left,$selector: '*:last-child', $reset-child-rhythm: true ) {
    position: relative;

    #{$selector} {
        position: absolute;
        @if ( $reset-child-rhythm == true){
            //@extend %u-reset-rhythm;
        }
        @for $i from 1 through length($sides) {
            #{nth($sides, $i)} : 0;
        }
        @content;
    }
}
@mixin u-stick( $sides:bottom left, $reset-child-rhythm: true ) {

    position: absolute;
    @if ( $reset-child-rhythm == true){
        //@extend %u-reset-rhythm;
    }
    @for $i from 1 through length($sides) {
        #{nth($sides, $i)} : 0;
    }
    @content;
}

@mixin u-float-rhythm($float:none) {

    ///TODO:needs rewrite.
    float: $float;

    @if ($float == left) {
        margin: rhythm(1) rhythm(2) rhythm(1) 0;
    } @else if ($float == right) {
        margin: rhythm(1) 0 rhythm(1) rhythm(2);
    } @else {
        margin: rhythm(1);
    }
    @include breakpoint-range(sm, "<=") {
        float: none;
        margin: rhythm(1) 0;
    }
}
@mixin u-horizontal-list( $margin:rhythm(.5) ,$justify-content: space-between) {
    display: flex;
    justify-content: $justify-content;

    > * {
        margin-right: $margin;

        &:last-child {
            margin-right: 0;
        }
    }
}

@mixin u-vcenter( $margin:rhythm(.5) ,$align-items: center) {
    display: flex;
    align-items: $align-items;
}

////*******************
//***EFFECTS
////*******************


@mixin u-transition($what: all, $time: 0.2s, $how: ease-in-out , $delay: 0) {
    -webkit-transition: $what $time $how;
    -moz-transition:    $what $time $how ;
    -ms-transition:     $what $time $how ;
    -o-transition:      $what $time $how ;
    transition:         $what $time $how ;
}

@mixin u-reflect-X(){
    -moz-transform: scale(-1, 1);
    -webkit-transform: scale(-1, 1);
    -o-transform: scale(-1, 1);
    -ms-transform: scale(-1, 1);
    transform: scale(-1, 1);
}
@mixin u-reflect-Y(){
    -moz-transform: scale(1, -1);
    -webkit-transform: scale(1, -1);
    -o-transform: scale(1, -1);
    -ms-transform: scale(1, -1);
    transform: scale(1, -1);
}

////*******************
//********FORMS///
////*******************

@mixin input-placeholder($self: false) {

    @if ( $self){
        #{$self}::-webkit-input-placeholder {@content}
        #{$self}:-moz-placeholder           {@content}
        #{$self}::-moz-placeholder          {@content}
        #{$self}:-ms-input-placeholder      {@content}
    }@else{
        ::-webkit-input-placeholder {@content}
        :-moz-placeholder           {@content}
        ::-moz-placeholder          {@content}
        :-ms-input-placeholder      {@content}
    }

}

////*******************
//********FONTS///
////*******************

@mixin font-smoothing($bool: true) {
    @if ($bool) {
        font-smoothing: antialiased;
        -webkit-text-size-adjust: 100%;

        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        text-rendering: optimizeLegibility;
        text-rendering: geometricPrecision;
    } @else {
        -webkit-font-smoothing: subpixel-antialiased;
        -moz-osx-font-smoothing: auto;
    }
}
//***SIZING
@mixin u-dimensions($width: 50px,$height:$width){
    width : $width;
    height: $height;
}

////*******************
//********BORDERS///
////*******************

@mixin border-single-side($side: top, $size:1px) {
    border-width: 0px;
 border-#{$side}-width: $size;
}
@mixin u-round($value, $type: all){
    @if ( $type == all ){
        border-radius:$value;
    }@else if ( $type == right ){
        border-top-right-radius:$value;
        border-bottom-right-radius:$value;
    }@else if ( $type == left ){
        border-top-left-radius:$value;
        border-bottom-left-radius:$value;
    }
}
////*******************
///***** CONTAINERs
////*******************

@mixin u-full-width-container($height: 100%, $min-height: $height) {
    width: 100vw;
    height: $height;
    min-height: $min-height;
}

@mixin u-make-container($percent: 100%, $max: none) {
    max-width: $max;
    margin: 0 auto;
    width: $percent;
}

@mixin u-default-container() {
    @include u-make-container($content-boxed-width);

    @include breakpoint-range(sm, "<=") {
        @include u-make-container($content-boxed-width-mobile);
    }
}

////*******************
///***** ICON
///*******************

@mixin u-icon-svg($color:red,$width: 100%,$height:$width) {
    @if ($width!=false) {
        width: $width;
    }
    @if ($height!=false) {
        height: $height;
    }
    display: inline-block;

    svg {
        display: block;
        width: 100%;
        height: 100%;

      //  @debug "icon ddebug #{get-collection(props)}";
        $props: (
            background: false,
            foreground:false,
            fill: true
        );
        @if ($color!=false) {
            @include g-color-scheme($color);
        }
    }
}
